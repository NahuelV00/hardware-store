// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(cuid()) @map("_id")
  username String @unique
  name String
  email String @unique
  password String
  isAdmin Boolean @default(false)
}

model Category{
  id String @id @default(cuid()) @map("_id")
  name String
  isActive Boolean @default(false)
  subCategories SubCategory[]
}

model SubCategory{
  id String @id @default(cuid()) @map("_id")
  name String
  isActive Boolean @default(false)

  //category relation
  categoryId String
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  //product relation
  products Product[]

  @@index([categoryId])
}

model Product{
  id String @id @default(cuid()) @map("_id")
  name String
  description String
  price Float
  isActive Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //subCategory relation
  subCategoryId String
  subCategory SubCategory @relation(fields: [subCategoryId], references: [id], onDelete: Cascade)

  //stock relation
  stock Stock?

  @@index([subCategoryId])
}

model Stock{
  id String @id @default(cuid()) @map("_id")
  quantity Int @default(0)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String @unique

  //Update Stock history
  //updates StockUpdate[]
}